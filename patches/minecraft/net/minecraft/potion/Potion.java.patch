--- before/net/minecraft/potion/Potion.java
+++ after/net/minecraft/potion/Potion.java
@@ -3,6 +3,7 @@
 import com.google.common.collect.Maps;
 import java.util.Map;
 import java.util.UUID;
+import java.util.Map.Entry;
 import javax.annotation.Nullable;
 import net.minecraft.entity.Entity;
 import net.minecraft.entity.EntityLivingBase;
@@ -21,10 +22,10 @@
 import net.minecraftforge.fml.relauncher.Side;
 import net.minecraftforge.fml.relauncher.SideOnly;
 
-public class Potion
+public class Potion extends net.minecraftforge.registries.IForgeRegistryEntry.Impl<Potion>
 {
-    public static final RegistryNamespaced<ResourceLocation, Potion> field_188414_b = new RegistryNamespaced<>();
-    private final Map<IAttribute, AttributeModifier> field_111188_I = Maps.newHashMap();
+    public static final RegistryNamespaced<ResourceLocation, Potion> field_188414_b = net.minecraftforge.registries.GameData.getWrapper(Potion.class);
+    private final Map<IAttribute, AttributeModifier> field_111188_I = Maps.<IAttribute, AttributeModifier>newHashMap();
     private final boolean field_76418_K;
     private final int field_76414_N;
     private String field_76416_I = "";
@@ -203,6 +204,12 @@
         return this.field_76416_I;
     }
 
+    protected Potion func_76404_a(double p_76404_1_)
+    {
+        this.field_76412_L = p_76404_1_;
+        return this;
+    }
+
     @SideOnly(Side.CLIENT)
     public boolean func_76400_d()
     {
@@ -215,7 +222,6 @@
         return this.field_76417_J;
     }
 
-    @SideOnly(Side.CLIENT)
     public boolean func_76398_f()
     {
         return this.field_76418_K;
@@ -235,12 +241,6 @@
         }
     }
 
-    protected Potion func_76404_a(double p_76404_1_)
-    {
-        this.field_76412_L = p_76404_1_;
-        return this;
-    }
-
     public int func_76401_j()
     {
         return this.field_76414_N;
@@ -253,15 +253,9 @@
         return this;
     }
 
-    @SideOnly(Side.CLIENT)
-    public Map<IAttribute, AttributeModifier> func_111186_k()
-    {
-        return this.field_111188_I;
-    }
-
     public void func_111187_a(EntityLivingBase p_111187_1_, AbstractAttributeMap p_111187_2_, int p_111187_3_)
     {
-        for (Map.Entry<IAttribute, AttributeModifier> entry : this.field_111188_I.entrySet())
+        for (Entry<IAttribute, AttributeModifier> entry : this.field_111188_I.entrySet())
         {
             IAttributeInstance iattributeinstance = p_111187_2_.func_111151_a(entry.getKey());
 
@@ -272,9 +266,15 @@
         }
     }
 
+    @SideOnly(Side.CLIENT)
+    public Map<IAttribute, AttributeModifier> func_111186_k()
+    {
+        return this.field_111188_I;
+    }
+
     public void func_111185_a(EntityLivingBase p_111185_1_, AbstractAttributeMap p_111185_2_, int p_111185_3_)
     {
-        for (Map.Entry<IAttribute, AttributeModifier> entry : this.field_111188_I.entrySet())
+        for (Entry<IAttribute, AttributeModifier> entry : this.field_111188_I.entrySet())
         {
             IAttributeInstance iattributeinstance = p_111185_2_.func_111151_a(entry.getKey());
 
@@ -292,6 +292,121 @@
         return p_111183_2_.func_111164_d() * (double)(p_111183_1_ + 1);
     }
 
+    /* ======================================== FORGE START =====================================*/
+
+    /**
+     * If the Potion effect should be displayed in the players inventory
+     * @param effect the active PotionEffect
+     * @return true to display it (default), false to hide it.
+     */
+    public boolean shouldRender(PotionEffect effect) { return true; }
+
+    /**
+     * If the standard PotionEffect text (name and duration) should be drawn when this potion is active.
+     * @param effect the active PotionEffect
+     * @return true to draw the standard text
+     */
+    public boolean shouldRenderInvText(PotionEffect effect)
+    {
+        return true;
+    }
+
+    /**
+     * If the Potion effect should be displayed in the player's ingame HUD
+     * @param effect the active PotionEffect
+     * @return true to display it (default), false to hide it.
+     */
+    public boolean shouldRenderHUD(PotionEffect effect)
+    {
+        return true;
+    }
+
+    /**
+     * Called to draw the this Potion onto the player's inventory when it's active.
+     * This can be used to e.g. render Potion icons from your own texture.
+     * @param x the x coordinate
+     * @param y the y coordinate
+     * @param effect the active PotionEffect
+     * @param mc the Minecraft instance, for convenience
+     * @deprecated use {@link #renderInventoryEffect(PotionEffect, net.minecraft.client.gui.Gui, int, int, float)}
+     */
+    @SideOnly(Side.CLIENT)
+    @Deprecated // TODO: remove
+    public void renderInventoryEffect(int x, int y, PotionEffect effect, net.minecraft.client.Minecraft mc) { }
+
+    /**
+     * Called to draw the this Potion onto the player's inventory when it's active.
+     * This can be used to e.g. render Potion icons from your own texture.
+     *
+     * @param effect the active PotionEffect
+     * @param gui the gui instance
+     * @param x the x coordinate
+     * @param y the y coordinate
+     * @param z the z level
+     */
+    @SideOnly(Side.CLIENT)
+    public void renderInventoryEffect(PotionEffect effect, net.minecraft.client.gui.Gui gui, int x, int y, float z)
+    {
+        renderInventoryEffect(x, y, effect, net.minecraft.client.Minecraft.func_71410_x());
+    }
+
+    /**
+     * Called to draw the this Potion onto the player's ingame HUD when it's active.
+     * This can be used to e.g. render Potion icons from your own texture.
+     * @param x the x coordinate
+     * @param y the y coordinate
+     * @param effect the active PotionEffect
+     * @param mc the Minecraft instance, for convenience
+     * @param alpha the alpha value, blinks when the potion is about to run out
+     * @deprecated use {@link #renderHUDEffect(PotionEffect, net.minecraft.client.gui.Gui, int, int, float, float)}
+     */
+    @SideOnly(Side.CLIENT)
+    @Deprecated // TODO: remove
+    public void renderHUDEffect(int x, int y, PotionEffect effect, net.minecraft.client.Minecraft mc, float alpha) { }
+
+    /**
+     * Called to draw the this Potion onto the player's ingame HUD when it's active.
+     * This can be used to e.g. render Potion icons from your own texture.
+     *
+     * @param effect the active PotionEffect
+     * @param gui the gui instance
+     * @param x the x coordinate
+     * @param y the y coordinate
+     * @param z the z level
+     * @param alpha the alpha value, blinks when the potion is about to run out
+     */
+    @SideOnly(Side.CLIENT)
+    public void renderHUDEffect(PotionEffect effect, net.minecraft.client.gui.Gui gui, int x, int y, float z, float alpha)
+    {
+        renderHUDEffect(x, y, effect, net.minecraft.client.Minecraft.func_71410_x(), alpha);
+    }
+
+    /**
+     * Get a fresh list of items that can cure this Potion.
+     * All new PotionEffects created from this Potion will call this to initialize the default curative items
+     * @see PotionEffect#getCurativeItems
+     * @return A list of items that can cure this Potion
+     */
+    public java.util.List<net.minecraft.item.ItemStack> getCurativeItems()
+    {
+        java.util.ArrayList<net.minecraft.item.ItemStack> ret = new java.util.ArrayList<net.minecraft.item.ItemStack>();
+        ret.add(new net.minecraft.item.ItemStack(net.minecraft.init.Items.field_151117_aB));
+        return ret;
+    }
+    
+    /**
+     * Used for determining {@code PotionEffect} sort order in GUIs.
+     * Defaults to the {@code PotionEffect}'s liquid color.
+     * @param potionEffect the {@code PotionEffect} instance containing the potion
+     * @return a value used to sort {@code PotionEffect}s in GUIs 
+     */
+    public int getGuiSortColor(PotionEffect potionEffect)
+    {
+        return this.func_76401_j();
+    }
+
+    /* ======================================== FORGE END =====================================*/
+
     @SideOnly(Side.CLIENT)
     public boolean func_188408_i()
     {
@@ -306,10 +421,10 @@
 
     public static void func_188411_k()
     {
-        field_188414_b.func_177775_a(1, new ResourceLocation("speed"), (new Potion(false, 8171462)).func_76390_b("effect.moveSpeed").func_76399_b(0, 0).func_111184_a(SharedMonsterAttributes.field_111263_d, "91AEAA56-376B-4498-935B-2F7F68070635", (double)0.2F, 2).func_188413_j());
-        field_188414_b.func_177775_a(2, new ResourceLocation("slowness"), (new Potion(true, 5926017)).func_76390_b("effect.moveSlowdown").func_76399_b(1, 0).func_111184_a(SharedMonsterAttributes.field_111263_d, "7107DE5E-7CE8-4030-940E-514C1F160890", (double) - 0.15F, 2));
-        field_188414_b.func_177775_a(3, new ResourceLocation("haste"), (new Potion(false, 14270531)).func_76390_b("effect.digSpeed").func_76399_b(2, 0).func_76404_a(1.5D).func_188413_j().func_111184_a(SharedMonsterAttributes.field_188790_f, "AF8B6E3F-3328-4C0A-AA36-5BA2BB9DBEF3", (double)0.1F, 2));
-        field_188414_b.func_177775_a(4, new ResourceLocation("mining_fatigue"), (new Potion(true, 4866583)).func_76390_b("effect.digSlowDown").func_76399_b(3, 0).func_111184_a(SharedMonsterAttributes.field_188790_f, "55FCED67-E92A-486E-9800-B47F202C4386", (double) - 0.1F, 2));
+        field_188414_b.func_177775_a(1, new ResourceLocation("speed"), (new Potion(false, 8171462)).func_76390_b("effect.moveSpeed").func_76399_b(0, 0).func_111184_a(SharedMonsterAttributes.field_111263_d, "91AEAA56-376B-4498-935B-2F7F68070635", 0.20000000298023224D, 2).func_188413_j());
+        field_188414_b.func_177775_a(2, new ResourceLocation("slowness"), (new Potion(true, 5926017)).func_76390_b("effect.moveSlowdown").func_76399_b(1, 0).func_111184_a(SharedMonsterAttributes.field_111263_d, "7107DE5E-7CE8-4030-940E-514C1F160890", -0.15000000596046448D, 2));
+        field_188414_b.func_177775_a(3, new ResourceLocation("haste"), (new Potion(false, 14270531)).func_76390_b("effect.digSpeed").func_76399_b(2, 0).func_76404_a(1.5D).func_188413_j().func_111184_a(SharedMonsterAttributes.field_188790_f, "AF8B6E3F-3328-4C0A-AA36-5BA2BB9DBEF3", 0.10000000149011612D, 2));
+        field_188414_b.func_177775_a(4, new ResourceLocation("mining_fatigue"), (new Potion(true, 4866583)).func_76390_b("effect.digSlowDown").func_76399_b(3, 0).func_111184_a(SharedMonsterAttributes.field_188790_f, "55FCED67-E92A-486E-9800-B47F202C4386", -0.10000000149011612D, 2));
         field_188414_b.func_177775_a(5, new ResourceLocation("strength"), (new PotionAttackDamage(false, 9643043, 3.0D)).func_76390_b("effect.damageBoost").func_76399_b(4, 0).func_111184_a(SharedMonsterAttributes.field_111264_e, "648D7064-6A60-4F59-8ABE-C2C23A6DD7A9", 0.0D, 0).func_188413_j());
         field_188414_b.func_177775_a(6, new ResourceLocation("instant_health"), (new PotionHealth(false, 16262179)).func_76390_b("effect.heal").func_188413_j());
         field_188414_b.func_177775_a(7, new ResourceLocation("instant_damage"), (new PotionHealth(true, 4393481)).func_76390_b("effect.harm").func_188413_j());
