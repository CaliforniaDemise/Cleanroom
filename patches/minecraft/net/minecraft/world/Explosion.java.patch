--- before/net/minecraft/world/Explosion.java
+++ after/net/minecraft/world/Explosion.java
@@ -32,15 +32,16 @@
 {
     private final boolean field_77286_a;
     private final boolean field_82755_b;
-    private final Random field_77290_i = new Random();
+    private final Random field_77290_i;
     private final World field_77287_j;
     private final double field_77284_b;
     private final double field_77285_c;
     private final double field_77282_d;
     private final Entity field_77283_e;
     private final float field_77280_f;
-    private final List<BlockPos> field_77281_g = Lists.newArrayList();
-    private final Map<EntityPlayer, Vec3d> field_77288_k = Maps.newHashMap();
+    private final List<BlockPos> field_77281_g;
+    private final Map<EntityPlayer, Vec3d> field_77288_k;
+    private final Vec3d position;
 
     @SideOnly(Side.CLIENT)
     public Explosion(World p_i45752_1_, Entity p_i45752_2_, double p_i45752_3_, double p_i45752_5_, double p_i45752_7_, float p_i45752_9_, List<BlockPos> p_i45752_10_)
@@ -57,6 +58,9 @@
 
     public Explosion(World p_i45754_1_, Entity p_i45754_2_, double p_i45754_3_, double p_i45754_5_, double p_i45754_7_, float p_i45754_9_, boolean p_i45754_10_, boolean p_i45754_11_)
     {
+        this.field_77290_i = new Random();
+        this.field_77281_g = Lists.<BlockPos>newArrayList();
+        this.field_77288_k = Maps.<EntityPlayer, Vec3d>newHashMap();
         this.field_77287_j = p_i45754_1_;
         this.field_77283_e = p_i45754_2_;
         this.field_77280_f = p_i45754_9_;
@@ -65,11 +69,12 @@
         this.field_77282_d = p_i45754_7_;
         this.field_77286_a = p_i45754_10_;
         this.field_82755_b = p_i45754_11_;
+        this.position = new Vec3d(this.field_77284_b, this.field_77285_c, this.field_77282_d);
     }
 
     public void func_77278_a()
     {
-        Set<BlockPos> set = Sets.newHashSet();
+        Set<BlockPos> set = Sets.<BlockPos>newHashSet();
         int i = 16;
 
         for (int j = 0; j < 16; ++j)
@@ -84,9 +89,9 @@
                         double d1 = (double)((float)k / 15.0F * 2.0F - 1.0F);
                         double d2 = (double)((float)l / 15.0F * 2.0F - 1.0F);
                         double d3 = Math.sqrt(d0 * d0 + d1 * d1 + d2 * d2);
-                        d0 /= d3;
-                        d1 /= d3;
-                        d2 /= d3;
+                        d0 = d0 / d3;
+                        d1 = d1 / d3;
+                        d2 = d2 / d3;
                         float f = this.field_77280_f * (0.7F + this.field_77287_j.field_73012_v.nextFloat() * 0.6F);
                         double d4 = this.field_77284_b;
                         double d6 = this.field_77285_c;
@@ -99,7 +104,7 @@
 
                             if (iblockstate.func_185904_a() != Material.field_151579_a)
                             {
-                                float f2 = this.field_77283_e != null ? this.field_77283_e.func_180428_a(this, this.field_77287_j, blockpos, iblockstate) : iblockstate.func_177230_c().func_149638_a((Entity)null);
+                                float f2 = this.field_77283_e != null ? this.field_77283_e.func_180428_a(this, this.field_77287_j, blockpos, iblockstate) : iblockstate.func_177230_c().getExplosionResistance(field_77287_j, blockpos, (Entity)null, this);
                                 f -= (f2 + 0.3F) * 0.3F;
                             }
 
@@ -108,9 +113,9 @@
                                 set.add(blockpos);
                             }
 
-                            d4 += d0 * (double)0.3F;
-                            d6 += d1 * (double)0.3F;
-                            d8 += d2 * (double)0.3F;
+                            d4 += d0 * 0.30000001192092896D;
+                            d6 += d1 * 0.30000001192092896D;
+                            d8 += d2 * 0.30000001192092896D;
                         }
                     }
                 }
@@ -126,6 +131,7 @@
         int j2 = MathHelper.func_76128_c(this.field_77282_d - (double)f3 - 1.0D);
         int j1 = MathHelper.func_76128_c(this.field_77282_d + (double)f3 + 1.0D);
         List<Entity> list = this.field_77287_j.func_72839_b(this.field_77283_e, new AxisAlignedBB((double)k1, (double)i2, (double)j2, (double)l1, (double)i1, (double)j1));
+        net.minecraftforge.event.ForgeEventFactory.onExplosionDetonate(this.field_77287_j, this, list, f3);
         Vec3d vec3d = new Vec3d(this.field_77284_b, this.field_77285_c, this.field_77282_d);
 
         for (int k2 = 0; k2 < list.size(); ++k2)
@@ -145,9 +151,9 @@
 
                     if (d13 != 0.0D)
                     {
-                        d5 /= d13;
-                        d7 /= d13;
-                        d9 /= d13;
+                        d5 = d5 / d13;
+                        d7 = d7 / d13;
+                        d9 = d9 / d13;
                         double d14 = (double)this.field_77287_j.func_72842_a(vec3d, entity.func_174813_aQ());
                         double d10 = (1.0D - d12) * d14;
                         entity.func_70097_a(DamageSource.func_94539_a(this), (float)((int)((d10 * d10 + d10) / 2.0D * 7.0D * (double)f3 + 1.0D)));
@@ -181,7 +187,7 @@
     {
         this.field_77287_j.func_184148_a((EntityPlayer)null, this.field_77284_b, this.field_77285_c, this.field_77282_d, SoundEvents.field_187539_bB, SoundCategory.BLOCKS, 4.0F, (1.0F + (this.field_77287_j.field_73012_v.nextFloat() - this.field_77287_j.field_73012_v.nextFloat()) * 0.2F) * 0.7F);
 
-        if (!(this.field_77280_f < 2.0F) && this.field_82755_b)
+        if (this.field_77280_f >= 2.0F && this.field_82755_b)
         {
             this.field_77287_j.func_175688_a(EnumParticleTypes.EXPLOSION_HUGE, this.field_77284_b, this.field_77285_c, this.field_77282_d, 1.0D, 0.0D, 0.0D);
         }
@@ -206,14 +212,14 @@
                     double d4 = d1 - this.field_77285_c;
                     double d5 = d2 - this.field_77282_d;
                     double d6 = (double)MathHelper.func_76133_a(d3 * d3 + d4 * d4 + d5 * d5);
-                    d3 /= d6;
-                    d4 /= d6;
-                    d5 /= d6;
+                    d3 = d3 / d6;
+                    d4 = d4 / d6;
+                    d5 = d5 / d6;
                     double d7 = 0.5D / (d6 / (double)this.field_77280_f + 0.1D);
-                    d7 *= (double)(this.field_77287_j.field_73012_v.nextFloat() * this.field_77287_j.field_73012_v.nextFloat() + 0.3F);
-                    d3 *= d7;
-                    d4 *= d7;
-                    d5 *= d7;
+                    d7 = d7 * (double)(this.field_77287_j.field_73012_v.nextFloat() * this.field_77287_j.field_73012_v.nextFloat() + 0.3F);
+                    d3 = d3 * d7;
+                    d4 = d4 * d7;
+                    d5 = d5 * d7;
                     this.field_77287_j.func_175688_a(EnumParticleTypes.EXPLOSION_NORMAL, (d0 + this.field_77284_b) / 2.0D, (d1 + this.field_77285_c) / 2.0D, (d2 + this.field_77282_d) / 2.0D, d3, d4, d5);
                     this.field_77287_j.func_175688_a(EnumParticleTypes.SMOKE_NORMAL, d0, d1, d2, d3, d4, d5);
                 }
@@ -225,8 +231,7 @@
                         block.func_180653_a(this.field_77287_j, blockpos, this.field_77287_j.func_180495_p(blockpos), 1.0F / this.field_77280_f, 0);
                     }
 
-                    this.field_77287_j.func_180501_a(blockpos, Blocks.field_150350_a.func_176223_P(), 3);
-                    block.func_180652_a(this.field_77287_j, blockpos, this);
+                    block.onBlockExploded(this.field_77287_j, blockpos, this);
                 }
             }
         }
@@ -274,4 +279,6 @@
     {
         return this.field_77281_g;
     }
+
+    public Vec3d getPosition(){ return this.position; }
 }
