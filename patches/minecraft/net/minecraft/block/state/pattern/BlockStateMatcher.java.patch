--- before/net/minecraft/block/state/pattern/BlockStateMatcher.java
+++ after/net/minecraft/block/state/pattern/BlockStateMatcher.java
@@ -3,6 +3,7 @@
 import com.google.common.base.Predicate;
 import com.google.common.collect.Maps;
 import java.util.Map;
+import java.util.Map.Entry;
 import javax.annotation.Nullable;
 import net.minecraft.block.Block;
 import net.minecraft.block.properties.IProperty;
@@ -19,7 +20,7 @@
         }
     };
     private final BlockStateContainer field_177641_a;
-    private final Map < IProperty<?>, Predicate<? >> field_177640_b = Maps.newHashMap();
+    private final Map < IProperty<?>, Predicate<? >> field_177640_b = Maps. < IProperty<?>, Predicate<? >> newHashMap();
 
     private BlockStateMatcher(BlockStateContainer p_i45653_1_)
     {
@@ -41,7 +42,7 @@
             }
             else
             {
-                for (Map.Entry < IProperty<?>, Predicate<? >> entry : this.field_177640_b.entrySet())
+                for (Entry < IProperty<?>, Predicate<? >> entry : this.field_177640_b.entrySet())
                 {
                     if (!this.func_185927_a(p_apply_1_, (IProperty)entry.getKey(), (Predicate)entry.getValue()))
                     {
@@ -60,7 +61,7 @@
 
     protected <T extends Comparable<T>> boolean func_185927_a(IBlockState p_185927_1_, IProperty<T> p_185927_2_, Predicate<T> p_185927_3_)
     {
-        return p_185927_3_.apply(p_185927_1_.<T>func_177229_b(p_185927_2_));
+        return p_185927_3_.apply(p_185927_1_.func_177229_b(p_185927_2_));
     }
 
     public <V extends Comparable<V>> BlockStateMatcher func_177637_a(IProperty<V> p_177637_1_, Predicate <? extends V > p_177637_2_)
