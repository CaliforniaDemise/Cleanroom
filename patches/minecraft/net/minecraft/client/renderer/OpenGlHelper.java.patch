--- before/net/minecraft/client/renderer/OpenGlHelper.java
+++ after/net/minecraft/client/renderer/OpenGlHelper.java
@@ -1,12 +1,5 @@
 package net.minecraft.client.renderer;
 
-import java.io.File;
-import java.io.IOException;
-import java.net.URI;
-import java.nio.ByteBuffer;
-import java.nio.FloatBuffer;
-import java.nio.IntBuffer;
-import java.util.Locale;
 import net.minecraft.client.Minecraft;
 import net.minecraft.client.renderer.vertex.DefaultVertexFormats;
 import net.minecraft.client.settings.GameSettings;
@@ -16,23 +9,17 @@
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
 import org.lwjgl.Sys;
-import org.lwjgl.opengl.ARBFramebufferObject;
-import org.lwjgl.opengl.ARBMultitexture;
-import org.lwjgl.opengl.ARBShaderObjects;
-import org.lwjgl.opengl.ARBVertexBufferObject;
-import org.lwjgl.opengl.ARBVertexShader;
-import org.lwjgl.opengl.ContextCapabilities;
-import org.lwjgl.opengl.EXTBlendFuncSeparate;
-import org.lwjgl.opengl.EXTFramebufferObject;
-import org.lwjgl.opengl.GL11;
-import org.lwjgl.opengl.GL13;
-import org.lwjgl.opengl.GL14;
-import org.lwjgl.opengl.GL15;
-import org.lwjgl.opengl.GL20;
-import org.lwjgl.opengl.GL30;
-import org.lwjgl.opengl.GLContext;
+import org.lwjgl.opengl.*;
 import oshi.SystemInfo;
-import oshi.hardware.Processor;
+import oshi.hardware.CentralProcessor;
+
+import java.io.File;
+import java.io.IOException;
+import java.net.URI;
+import java.nio.ByteBuffer;
+import java.nio.FloatBuffer;
+import java.nio.IntBuffer;
+import java.util.Locale;
 
 @SideOnly(Side.CLIENT)
 public class OpenGlHelper
@@ -93,6 +80,10 @@
     public static int field_176089_P;
     public static int field_148826_e;
 
+    /* Stores the last values sent into setLightmapTextureCoords */
+    public static float lastBrightnessX = 0.0f;
+    public static float lastBrightnessY = 0.0f;
+
     public static void func_77474_a()
     {
         ContextCapabilities contextcapabilities = GLContext.getCapabilities();
@@ -294,11 +285,12 @@
 
         try
         {
-            Processor[] aprocessor = (new SystemInfo()).getHardware().getProcessors();
-            field_183030_aa = String.format("%dx %s", aprocessor.length, aprocessor[0]).replaceAll("\\s+", " ");
+            CentralProcessor aprocessor = (new SystemInfo()).getHardware().getProcessor();
+            field_183030_aa = String.format("%dx %s", aprocessor.getLogicalProcessorCount(), aprocessor.getProcessorIdentifier().getName()).replaceAll("\\s+", " ");
         }
-        catch (Throwable throwable)
+        catch (Throwable var3)
         {
+            ;
         }
     }
 
@@ -851,6 +843,12 @@
         else
         {
             GL13.glMultiTexCoord2f(p_77475_0_, p_77475_1_, p_77475_2_);
+        }
+
+        if (p_77475_0_ == field_77476_b)
+        {
+            lastBrightnessX = p_77475_1_;
+            lastBrightnessY = p_77475_2_;
         }
     }
 
