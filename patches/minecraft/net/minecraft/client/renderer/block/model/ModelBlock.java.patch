--- before/net/minecraft/client/renderer/block/model/ModelBlock.java
+++ after/net/minecraft/client/renderer/block/model/ModelBlock.java
@@ -18,6 +18,7 @@
 import java.util.List;
 import java.util.Map;
 import java.util.Set;
+import java.util.Map.Entry;
 import javax.annotation.Nullable;
 import net.minecraft.util.JsonUtils;
 import net.minecraft.util.ResourceLocation;
@@ -47,7 +48,7 @@
 
     public static ModelBlock func_178307_a(Reader p_178307_0_)
     {
-        return JsonUtils.func_188173_a(field_178319_a, p_178307_0_, ModelBlock.class, false);
+        return (ModelBlock)JsonUtils.func_188173_a(field_178319_a, p_178307_0_, ModelBlock.class, false);
     }
 
     public static ModelBlock func_178294_a(String p_178294_0_)
@@ -101,7 +102,7 @@
 
     public Collection<ResourceLocation> func_187965_e()
     {
-        Set<ResourceLocation> set = Sets.newHashSet();
+        Set<ResourceLocation> set = Sets.<ResourceLocation>newHashSet();
 
         for (ItemOverride itemoverride : this.field_187968_k)
         {
@@ -219,8 +220,9 @@
 
                 throw new ModelBlock.LoopException();
             }
-            catch (NullPointerException nullpointerexception)
+            catch (NullPointerException var5)
             {
+                ;
             }
         }
     }
@@ -252,7 +254,7 @@
                 if (jsonobject.has("display"))
                 {
                     JsonObject jsonobject1 = JsonUtils.func_152754_s(jsonobject, "display");
-                    itemcameratransforms = p_deserialize_3_.deserialize(jsonobject1, ItemCameraTransforms.class);
+                    itemcameratransforms = (ItemCameraTransforms)p_deserialize_3_.deserialize(jsonobject1, ItemCameraTransforms.class);
                 }
 
                 List<ItemOverride> list1 = this.func_187964_a(p_deserialize_3_, jsonobject);
@@ -262,13 +264,13 @@
 
             protected List<ItemOverride> func_187964_a(JsonDeserializationContext p_187964_1_, JsonObject p_187964_2_)
             {
-                List<ItemOverride> list = Lists.newArrayList();
+                List<ItemOverride> list = Lists.<ItemOverride>newArrayList();
 
                 if (p_187964_2_.has("overrides"))
                 {
                     for (JsonElement jsonelement : JsonUtils.func_151214_t(p_187964_2_, "overrides"))
                     {
-                        list.add(p_187964_1_.deserialize(jsonelement, ItemOverride.class));
+                        list.add((ItemOverride)p_187964_1_.deserialize(jsonelement, ItemOverride.class));
                     }
                 }
 
@@ -277,15 +279,15 @@
 
             private Map<String, String> func_178329_b(JsonObject p_178329_1_)
             {
-                Map<String, String> map = Maps.newHashMap();
+                Map<String, String> map = Maps.<String, String>newHashMap();
 
                 if (p_178329_1_.has("textures"))
                 {
                     JsonObject jsonobject = p_178329_1_.getAsJsonObject("textures");
 
-                    for (Map.Entry<String, JsonElement> entry : jsonobject.entrySet())
+                    for (Entry<String, JsonElement> entry : jsonobject.entrySet())
                     {
-                        map.put(entry.getKey(), entry.getValue().getAsString());
+                        map.put(entry.getKey(), ((JsonElement)entry.getValue()).getAsString());
                     }
                 }
 
@@ -304,13 +306,13 @@
 
             protected List<BlockPart> func_178325_a(JsonDeserializationContext p_178325_1_, JsonObject p_178325_2_)
             {
-                List<BlockPart> list = Lists.newArrayList();
+                List<BlockPart> list = Lists.<BlockPart>newArrayList();
 
                 if (p_178325_2_.has("elements"))
                 {
                     for (JsonElement jsonelement : JsonUtils.func_151214_t(p_178325_2_, "elements"))
                     {
-                        list.add(p_178325_1_.deserialize(jsonelement, BlockPart.class));
+                        list.add((BlockPart)p_178325_1_.deserialize(jsonelement, BlockPart.class));
                     }
                 }
 
