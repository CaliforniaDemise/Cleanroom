--- before/net/minecraft/client/renderer/debug/DebugRendererNeighborsUpdate.java
+++ after/net/minecraft/client/renderer/debug/DebugRendererNeighborsUpdate.java
@@ -6,6 +6,7 @@
 import java.util.Iterator;
 import java.util.Map;
 import java.util.Set;
+import java.util.Map.Entry;
 import net.minecraft.client.Minecraft;
 import net.minecraft.client.renderer.GlStateManager;
 import net.minecraft.client.renderer.RenderGlobal;
@@ -29,22 +30,22 @@
 
     public void func_191553_a(long p_191553_1_, BlockPos p_191553_3_)
     {
-        Map<BlockPos, Integer> map = this.field_191555_b.get(p_191553_1_);
+        Map<BlockPos, Integer> map = (Map)this.field_191555_b.get(Long.valueOf(p_191553_1_));
 
         if (map == null)
         {
-            map = Maps.newHashMap();
-            this.field_191555_b.put(p_191553_1_, map);
+            map = Maps.<BlockPos, Integer>newHashMap();
+            this.field_191555_b.put(Long.valueOf(p_191553_1_), map);
         }
 
         Integer integer = map.get(p_191553_3_);
 
         if (integer == null)
         {
-            integer = 0;
+            integer = Integer.valueOf(0);
         }
 
-        map.put(p_191553_3_, integer + 1);
+        map.put(p_191553_3_, Integer.valueOf(integer.intValue() + 1));
     }
 
     public void func_190060_a(float p_190060_1_, long p_190060_2_)
@@ -62,16 +63,16 @@
         GlStateManager.func_179132_a(false);
         int j = 200;
         double d3 = 0.0025D;
-        Set<BlockPos> set = Sets.newHashSet();
-        Map<BlockPos, Integer> map = Maps.newHashMap();
-        Iterator<Map.Entry<Long, Map<BlockPos, Integer>>> iterator = this.field_191555_b.entrySet().iterator();
+        Set<BlockPos> set = Sets.<BlockPos>newHashSet();
+        Map<BlockPos, Integer> map = Maps.<BlockPos, Integer>newHashMap();
+        Iterator<Entry<Long, Map<BlockPos, Integer>>> iterator = this.field_191555_b.entrySet().iterator();
 
         while (iterator.hasNext())
         {
-            Map.Entry<Long, Map<BlockPos, Integer>> entry = iterator.next();
+            Entry<Long, Map<BlockPos, Integer>> entry = (Entry)iterator.next();
             Long olong = entry.getKey();
-            Map<BlockPos, Integer> map1 = entry.getValue();
-            long k = i - olong;
+            Map<BlockPos, Integer> map1 = (Map)entry.getValue();
+            long k = i - olong.longValue();
 
             if (k > 200L)
             {
@@ -79,7 +80,7 @@
             }
             else
             {
-                for (Map.Entry<BlockPos, Integer> entry1 : map1.entrySet())
+                for (Entry<BlockPos, Integer> entry1 : map1.entrySet())
                 {
                     BlockPos blockpos = entry1.getKey();
                     Integer integer = entry1.getValue();
@@ -93,7 +94,7 @@
             }
         }
 
-        for (Map.Entry<BlockPos, Integer> entry2 : map.entrySet())
+        for (Entry<BlockPos, Integer> entry2 : map.entrySet())
         {
             BlockPos blockpos1 = entry2.getKey();
             Integer integer1 = entry2.getValue();
