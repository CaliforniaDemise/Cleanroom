--- before/net/minecraft/stats/StatisticsManagerServer.java
+++ after/net/minecraft/stats/StatisticsManagerServer.java
@@ -11,6 +11,7 @@
 import java.lang.reflect.Constructor;
 import java.util.Map;
 import java.util.Set;
+import java.util.Map.Entry;
 import net.minecraft.entity.player.EntityPlayer;
 import net.minecraft.entity.player.EntityPlayerMP;
 import net.minecraft.network.play.server.SPacketStatistics;
@@ -26,7 +27,7 @@
     private static final Logger field_150889_b = LogManager.getLogger();
     private final MinecraftServer field_150890_c;
     private final File field_150887_d;
-    private final Set<StatBase> field_150888_e = Sets.newHashSet();
+    private final Set<StatBase> field_150888_e = Sets.<StatBase>newHashSet();
     private int field_150885_f = -300;
 
     public StatisticsManagerServer(MinecraftServer p_i45306_1_, File p_i45306_2_)
@@ -86,14 +87,14 @@
 
         if (!jsonelement.isJsonObject())
         {
-            return Maps.newHashMap();
+            return Maps.<StatBase, TupleIntJsonSerializable>newHashMap();
         }
         else
         {
             JsonObject jsonobject = jsonelement.getAsJsonObject();
-            Map<StatBase, TupleIntJsonSerializable> map = Maps.newHashMap();
+            Map<StatBase, TupleIntJsonSerializable> map = Maps.<StatBase, TupleIntJsonSerializable>newHashMap();
 
-            for (Map.Entry<String, JsonElement> entry : jsonobject.entrySet())
+            for (Entry<String, JsonElement> entry : jsonobject.entrySet())
             {
                 StatBase statbase = StatList.func_151177_a(entry.getKey());
 
@@ -101,13 +102,13 @@
                 {
                     TupleIntJsonSerializable tupleintjsonserializable = new TupleIntJsonSerializable();
 
-                    if (entry.getValue().isJsonPrimitive() && entry.getValue().getAsJsonPrimitive().isNumber())
+                    if (((JsonElement)entry.getValue()).isJsonPrimitive() && ((JsonElement)entry.getValue()).getAsJsonPrimitive().isNumber())
                     {
-                        tupleintjsonserializable.func_151188_a(entry.getValue().getAsInt());
+                        tupleintjsonserializable.func_151188_a(((JsonElement)entry.getValue()).getAsInt());
                     }
-                    else if (entry.getValue().isJsonObject())
+                    else if (((JsonElement)entry.getValue()).isJsonObject())
                     {
-                        JsonObject jsonobject1 = entry.getValue().getAsJsonObject();
+                        JsonObject jsonobject1 = ((JsonElement)entry.getValue()).getAsJsonObject();
 
                         if (jsonobject1.has("value") && jsonobject1.get("value").isJsonPrimitive() && jsonobject1.get("value").getAsJsonPrimitive().isNumber())
                         {
@@ -146,27 +147,27 @@
     {
         JsonObject jsonobject = new JsonObject();
 
-        for (Map.Entry<StatBase, TupleIntJsonSerializable> entry : p_150880_0_.entrySet())
+        for (Entry<StatBase, TupleIntJsonSerializable> entry : p_150880_0_.entrySet())
         {
-            if (entry.getValue().func_151187_b() != null)
+            if (((TupleIntJsonSerializable)entry.getValue()).func_151187_b() != null)
             {
                 JsonObject jsonobject1 = new JsonObject();
-                jsonobject1.addProperty("value", entry.getValue().func_151189_a());
+                jsonobject1.addProperty("value", Integer.valueOf(((TupleIntJsonSerializable)entry.getValue()).func_151189_a()));
 
                 try
                 {
-                    jsonobject1.add("progress", entry.getValue().<IJsonSerializable>func_151187_b().func_151003_a());
+                    jsonobject1.add("progress", ((TupleIntJsonSerializable)entry.getValue()).func_151187_b().func_151003_a());
                 }
                 catch (Throwable throwable)
                 {
-                    field_150889_b.warn("Couldn't save statistic {}: error serializing progress", entry.getKey().func_150951_e(), throwable);
+                    field_150889_b.warn("Couldn't save statistic {}: error serializing progress", ((StatBase)entry.getKey()).func_150951_e(), throwable);
                 }
 
                 jsonobject.add((entry.getKey()).field_75975_e, jsonobject1);
             }
             else
             {
-                jsonobject.addProperty((entry.getKey()).field_75975_e, entry.getValue().func_151189_a());
+                jsonobject.addProperty((entry.getKey()).field_75975_e, Integer.valueOf(((TupleIntJsonSerializable)entry.getValue()).func_151189_a()));
             }
         }
 
@@ -181,7 +182,7 @@
     public void func_150876_a(EntityPlayerMP p_150876_1_)
     {
         int i = this.field_150890_c.func_71259_af();
-        Map<StatBase, Integer> map = Maps.newHashMap();
+        Map<StatBase, Integer> map = Maps.<StatBase, Integer>newHashMap();
 
         if (i - this.field_150885_f > 300)
         {
@@ -189,7 +190,7 @@
 
             for (StatBase statbase : this.func_150878_c())
             {
-                map.put(statbase, this.func_77444_a(statbase));
+                map.put(statbase, Integer.valueOf(this.func_77444_a(statbase)));
             }
         }
 
